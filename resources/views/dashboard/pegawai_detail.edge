<!DOCTYPE html>
<html lang="id">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Profil Pegawai</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
  <meta name="theme-color" content="#5ab2ff" />
  @vite(['resources/css/styles.css'])
  @vite(['resources/css/pegawai-detail.css'])
</head>

<body class="bg-body-secondary theme-light-blue" data-bs-theme="light">
  @include('components/sidebar')
  <div class="main-wrapper d-flex flex-column min-vh-100">
    @include('components/header')
    <main class="flex-grow-1 p-3 p-lg-4">
      @!component('dashboard/components/profil_data_pegawai',
      {
      nama_lengkap: pegawaiData.nama_lengkap,
      npy: pegawaiData.npy ,
      nik: pegawaiData.nik ,
      npwp: pegawaiData.npwp ,
      tempat_lahir: pegawaiData.tempat_lahir ,
      tanggal_lahir: pegawaiData.tanggal_lahir ,
      jenis_kelamin: pegawaiData.jenis_kelamin,
      unitKerja : unitKerja.unit_kerja,
      jabatan : role.nama_role,
      statusKepegawaian : statusKepegawaian.status_kepegawaian
      })

      <div class="bento-layout mb-2 mt-2">
        @if(pegawaiData.role_id === 5)

        @!component('dashboard/components/atribut_akademik', {
        nidn: dosen.nidn ,
        nuptk: dosen.nuptk,
        programStudi: dosen.program_studi,
        fakultas: dosen.fakultas,
        jenjang: dosen.jenjang
        })
        @else
        @!component('dashboard/components/atribut_lain', {
        jabatanPegawaiLain: unitKerja.unit_kerja
        })
        @endif
      </div>

      @!component('dashboard/components/keluarga', {
      namaKeluarga: keluarga.nama_keluarga ,
      hubunganKeluarga: keluarga.hubungan
      })
      @!component('dashboard/components/kesehatan_fisik', {
      tinggi: dataKesehatanFisik.tinggi_cm ,
      berat: dataKesehatanFisik.berat_kg ,
      golonganDarah: dataKesehatanFisik.golongan_darah ,
      tekananDarah: dataKesehatanFisik.tekanan_darah ,
      alergi: dataKesehatanFisik.alergi ,
      disabilitas: dataKesehatanFisik.disabilitas ,
      catatanKesehatan: dataKesehatanFisik.catatan_kesehatan
      })

  </div>

  {{--  <div class="bento-layout mb-2 mt-2">

    @!component('dashboard/components/dokumen', {
    dokumen: (findById.dokumen ),
    jenisDokumen: (findById.jenis_dokumen ),
    statusDokumen: (findById.status_dokumen)
    })

  </div>
  <div class="bento-layout mb-2 mt-2">

    <div class="bento-layout mb-2 mt-2">
      @!component('dashboard/components/pendidikan', {
      jenjangPendidikan: (findById.jenjang_pendidikan ),
      namaUniversitas: (findById.nama_universitas ),
      tahunLulus: (findById.tahun_lulus)
      })
      @!component('dashboard/components/aktivitas', {
      aktivitas: (findById.aktivitas ),
      tanggalAktifitas: (findById.tanggal_aktivitas)
      })
    </div>
    <div class="bento-layout mb-2 mt-2">
      @!component('dashboard/components/kuota_cuti', {
      jenisCuti: (findById.jenis_cuti ),
      jumlahCuti: (findById.jumlah_cuti)
      })
      @!component('dashboard/components/riwayat_cuti', {
      jenisCuti: (findById.jenis_cuti ),
      keteranganCuti: (findById.keterangan_cuti ),
      durasiCuti: (findById.durasi_cuti)
      })
    </div>
    <div class="bento-layout mb-2 mt-2">
      @!component('dashboard/components/pengajuan_cuti', {
      jenisCuti: (findById.jenis_cuti ),
      filePengajuan: (findById.file_pengajuan ),
      tanggalPengajuan: (findById.tanggal_pengajuan)
      })
      @!component('dashboard/components/pengajuan_izin', {
      jenisIzin: (findById.jenis_izin ),
      filePengajuan: (findById.file_pengajuan ),
      tanggalPengajuan: (findById.tanggal_pengajuan)
      })
    </div>
    <div class="bento-layout mb-2 mt-2">
      @!component('dashboard/components/riwayat_gaji', {
      periodeGaji: (findById.periode_gaji ),
      jumlahGaji: (findById.jumlah_gaji)
      })
      @!component('dashboard/components/riwayat_kepangkatan', {
      golonganRuangJabatan: (findById.golongan_ruang_jabatan ),
      tmt: (findById.tmt)
      })

    </div>
    <div class="bento-layout mb-2 mt-2">
      @!component('dashboard/components/pelatihan', {
      pelatihan: (findById.pelatihan ),
      tahunPelatihan: (findById.tahun_pelatihan)
      })
      @!component('dashboard/components/penghargaan', {
      penghargaan: (findById.penghargaan ),
      tahunPenghargaan: (findById.tahun_penghargaan)
      })
    </div>
    <div class="bento-layout mb-2 mt-2">
      @!component('dashboard/components/penelitian', {
      judulPenelitian: (findById.judul_penelitian ),
      tahunPenelitian: (findById.tahun_penelitian)
      })
      @!component('dashboard/components/pengabdian', {
      judulPengabdian: (findById.judul_pengabdian ),
      tahunPengabdian: (findById.tahun_pengabdian)
      })
    </div>
    <div class="bento-layout mb-2 mt-2">
      @!component('dashboard/components/publikasi', {
      judulPublikasi: (findById.judul_publikasi ),
      tahunPublikasi: (findById.tahun_publikasi)
      })
    </div>
    <div class="bento-layout mb-2 mt-2">
      @!component('dashboard/components/ringkasan', {
      jabatan: (findById.jabatan ),
      unitKerja: (findById.unit_kerja_id ),
      statusKepegawaian: (findById.status_kepegawaian)
      })
      @!component('dashboard/components/catatan', {
      catatan: (findById.catatan)
      })
    </div>  --}}

  </div>
  </main>
  @include('components/footer')
  </div>
  <script>
    // Set "Memuat ..." placeholders for fields that haven't been populated by backend yet
    (function () {
      function needsLoadingText(text) {
        if (!text) return true;
        const t = text.trim();
        if (!t) return true;
        // Matches bracket placeholders like [NIDN], or any text still containing [ ... ]
        if (/\[.+\]/.test(t)) return true;
        return false;
      }

      const placeholders = {
        // Profil & Data Pegawai
        namaLengkap: 'Nama Lengkap',
        npy: 'NPY/NIP',
        nik: 'NIK',
        npwp: 'NPWP',
        tempatLahir: 'Tempat Lahir',
        tanggalLahir: 'Tanggal Lahir',
        jenisKelamin: 'Jenis Kelamin',
        unitKerja: 'Unit Kerja',
        jabatan: 'Jabatan',
        statusKepegawaian: 'Status Kepegawaian',
        agama: 'Agama',
        suku: 'Suku',
        emailPribadi: 'Email Pribadi',
        emailKantor: 'Email Kantor',
        noHp: 'No HP',
        noHpDarurat: 'No HP Darurat',
        statusPerkawinan: 'Status Perkawinan',
        alamat: 'Alamat',
        masaKerja: 'Masa Kerja',
        nomorUrut: 'Nomor Urut',
        // Aktivitas
        aktivitas: 'Aktivitas',
        tanggalAktifitas: 'Tanggal Aktivitas',
        // Atribut Akademik
        nidn: 'NIDN',
        nuptk: 'NUPTK',
        programStudi: 'Program Studi',
        fakultas: 'Fakultas',
        jenjang: 'Jenjang',
        npyNip: 'NPY/NIP',
        detUnit: 'Unit Kerja',
        statusKepegawaian: 'Status Kepegawaian',
        detJabatan: 'Jabatan',
        // Atribut Lain
        jabatanPegawaiLain: 'Jabatan Pegawai Lain',
        // Dokumen
        dokumen: 'Dokumen',
        statusDokumen: 'Status Dokumen',
        jenisDokumen: 'Jenis Dokumen',
        // Keluarga
        namaKeluarga: 'Nama Keluarga',
        hubunganKeluarga: 'Hubungan Keluarga',
        // Kesehatan Fisik
        tinggi: 'Tinggi',
        berat: 'Berat',
        golonganDarah: 'Golongan Darah',
        tekananDarah: 'Tekanan Darah',
        alergi: 'Alergi',
        disabilitas: 'Disabilitas',
        catatanKesehatan: 'Catatan Kesehatan',
        // Cuti
        jenisCuti: 'Jenis Cuti',
        jumlahCuti: 'Jumlah Cuti',
        keteranganCuti: 'Keterangan',
        // Pelatihan
        pelatihan: 'Pelatihan',
        tahunPelatihan: 'Tahun Pelatihan',
        // Pendidikan
        jenjangPendidikan: 'Jenjang',
        namaUniversitas: 'Nama Universitas',
        tahunLulus: 'Tahun Lulus',
        // Penelitian
        judulPenelitian: 'Judul Penelitian',
        tahunPenelitian: 'Tahun Penelitian',
        // Pengabdian
        judulPengabdian: 'Judul Pengabdian',
        tahunPengabdian: 'Tahun Pengabdian',
        // Pengajuan (Cuti/Izin)
        filePengajuan: 'File Pengajuan',
        tanggalPengajuan: 'Tanggal Pengajuan',
        jenisIzin: 'Jenis Izin',
        // Penghargaan
        penghargaan: 'Penghargaan',
        tahunPenghargaan: 'Tahun Penghargaan',
        // Gaji
        periodeGaji: 'Periode',
        jumlahGaji: 'Jumlah Gaji',
        // Kepangkatan
        golonganRuangJabatan: 'Golongan/Ruang/Jabatan',
        tmt: 'TMT',
        // Riwayat Kesehatan
        jenisPenyakit: 'Jenis Penyakit',
        keterangan: 'Keterangan',
        tanggalDiagnosa: 'Tanggal Diagnosa',
        // Publikasi
        judulPublikasi: 'Judul Publikasi',
        tahunPublikasi: 'Tahun Publikasi',
        // Ringkasan
        jabatan: 'Jabatan',
        unitKerja: 'Unit Kerja',
        statusKepegawaian: 'Status Kepegawaian',
      };

      document.addEventListener('DOMContentLoaded', function () {
        // For text/spans/divs with duplicated ids, querySelectorAll by attribute to cover all occurrences
        Object.entries(placeholders).forEach(([id, label]) => {
          document.querySelectorAll(`[id="${id}"]`).forEach((el) => {
            const current = (el.textContent || '').trim();
            if (needsLoadingText(current)) {
              el.textContent = `Memuat ${label}...`;
            }
          });
        });

        // For textarea catatan: set placeholder when empty
        const catatan = document.getElementById('catatan');
        if (catatan && !catatan.value) {
          if (!catatan.placeholder || /\[.+\]/.test(catatan.placeholder) || /Catatan internal/.test(catatan.placeholder)) {
            catatan.placeholder = 'Memuat Catatan...';
          }
        }
      });
    })();
  </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/umd/bootstrap.bundle.min.js"></script>
</body>

</html>
